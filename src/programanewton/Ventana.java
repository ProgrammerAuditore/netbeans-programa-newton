/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programanewton;


import java.awt.Component;
import java.awt.Container;
import java.awt.Image;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Stack;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author max98
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        
        initComponents();

        this.setLocationRelativeTo(null);

        this.fncAgregarEventoDeTecladoVentana(this.getContentPane());
        this.fncAgregarEventoDeTecladoPanel(this.panelOpcion1);
        this.fncAgregarEventoDeTecladoPanel(this.panelOpcion2);

        ImageIcon ico = new ImageIcon(getClass().getResource("/programanewton/img/formulario1.jpg"));
        JLabel a1 = new JLabel();
        a1.setBounds(0, 0, this.panelImagen.getWidth(), this.panelImagen.getHeight());
        a1.setIcon(new ImageIcon(ico.getImage().getScaledInstance(a1.getWidth(), a1.getHeight(), Image.SCALE_SMOOTH)));
        this.panelImagen.add(a1);

        modeloTabla.addColumn("No. Iter.");
        modeloTabla.addColumn("Xi");
        modeloTabla.addColumn("Yi");
        modeloTabla.addColumn("Xr");
        modeloTabla.addColumn("Yr");
        modeloTabla.addColumn("Ea(Xr)");
        modeloTabla.addColumn("Ea(Yr)");

        this.fncSeleccionarFormaDeIteracion(0);
        
        this.tblMiTabla.setModel(this.modeloTabla);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelOpcion1 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txtfCampoIteraciones = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        panelOpcion2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txtfCampoPorcentaje = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtfCampoA = new javax.swing.JTextField();
        txtfCampoB = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtfCampoD = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtfCampoE = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cmbxOpciones = new javax.swing.JComboBox<>();
        txtfCampoC = new javax.swing.JTextField();
        txtfCampoF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMiTabla = new javax.swing.JTable();
        btnReiniciar = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtfCampoXi = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtfCampoYi = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        panelImagen = new javax.swing.JPanel();

        panelOpcion1.setBackground(new java.awt.Color(0, 51, 51));
        panelOpcion1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelOpcion1.setEnabled(false);

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Introduzca la cantidad de iteraciones");

        txtfCampoIteraciones.setToolTipText("variable Iteraciones");

        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Nota: La cantidad máxima de iteraciones es de 100.");

        javax.swing.GroupLayout panelOpcion1Layout = new javax.swing.GroupLayout(panelOpcion1);
        panelOpcion1.setLayout(panelOpcion1Layout);
        panelOpcion1Layout.setHorizontalGroup(
            panelOpcion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOpcion1Layout.createSequentialGroup()
                .addGroup(panelOpcion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOpcion1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel1))
                    .addGroup(panelOpcion1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(panelOpcion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(txtfCampoIteraciones, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        panelOpcion1Layout.setVerticalGroup(
            panelOpcion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOpcion1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfCampoIteraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        panelOpcion2.setBackground(new java.awt.Color(0, 51, 51));
        panelOpcion2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelOpcion2.setEnabled(false);

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Introduzca el porcentaje para Ea(Xr) y Ea(Yr)");

        txtfCampoPorcentaje.setToolTipText("variable de porcentaje");

        jLabel7.setForeground(new java.awt.Color(255, 51, 51));
        jLabel7.setText("Nota: El programa evalúa 100 resultados.");

        javax.swing.GroupLayout panelOpcion2Layout = new javax.swing.GroupLayout(panelOpcion2);
        panelOpcion2.setLayout(panelOpcion2Layout);
        panelOpcion2Layout.setHorizontalGroup(
            panelOpcion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOpcion2Layout.createSequentialGroup()
                .addGroup(panelOpcion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOpcion2Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel7))
                    .addGroup(panelOpcion2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(panelOpcion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfCampoPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        panelOpcion2Layout.setVerticalGroup(
            panelOpcion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOpcion2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(txtfCampoPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(jLabel7)
                .addGap(8, 8, 8))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Programa de Newton - Release");
        setBackground(new java.awt.Color(204, 204, 204));
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("x");

        jLabel3.setText("2");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel4.setText("+");

        txtfCampoA.setToolTipText("variable A");

        txtfCampoB.setToolTipText("variable B");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel5.setText("x");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel8.setText("y");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel6.setText("=");

        txtfCampoD.setToolTipText("viariable D");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel10.setText("y");

        txtfCampoE.setToolTipText("variable E");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel9.setText("x");

        jLabel11.setText("2");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel12.setText("+");

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel13.setText("y");

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel14.setText("=");

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 51, 51));
        jLabel16.setText("Introduzca los valores de las variables:");

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 51, 51));
        jLabel17.setText("Selecciona una forma de iteración:");

        cmbxOpciones.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbxOpciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Por cantidad de iteraciones", "Por error de aproximación (Ea)" }));
        cmbxOpciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbxOpcionesItemStateChanged(evt);
            }
        });

        txtfCampoC.setToolTipText("variable C");

        txtfCampoF.setToolTipText("variable F");

        tblMiTabla.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tblMiTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMiTabla.setEnabled(false);
        tblMiTabla.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(tblMiTabla);

        btnReiniciar.setBackground(new java.awt.Color(204, 0, 0));
        btnReiniciar.setForeground(new java.awt.Color(255, 255, 255));
        btnReiniciar.setText("Reiniciar");
        btnReiniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnReiniciarMouseReleased(evt);
            }
        });

        btnCalcular.setBackground(new java.awt.Color(0, 153, 0));
        btnCalcular.setForeground(new java.awt.Color(255, 255, 255));
        btnCalcular.setText("Cálcular");
        btnCalcular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCalcularMouseReleased(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel15.setText("x");

        txtfCampoXi.setToolTipText("variable Xi");

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel21.setText("i");

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel23.setText("=");

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel24.setText("y");

        txtfCampoYi.setToolTipText("variable Yi");

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel25.setText("i");

        jLabel26.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel26.setText("=");

        javax.swing.GroupLayout panelImagenLayout = new javax.swing.GroupLayout(panelImagen);
        panelImagen.setLayout(panelImagenLayout);
        panelImagenLayout.setHorizontalGroup(
            panelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        panelImagenLayout.setVerticalGroup(
            panelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 147, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtfCampoD, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfCampoE, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtfCampoA, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(91, 91, 91)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel4)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfCampoB, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtfCampoF, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtfCampoC, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(panelImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbxOpciones, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfCampoXi, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfCampoYi, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtfCampoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(txtfCampoC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)))
                            .addComponent(txtfCampoA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(txtfCampoD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12)
                                .addComponent(txtfCampoE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(jLabel14)
                                .addComponent(txtfCampoF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11))
                        .addGap(31, 31, 31)
                        .addComponent(jLabel17)
                        .addGap(19, 19, 19)
                        .addComponent(cmbxOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(txtfCampoXi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel21))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel24)
                                .addComponent(txtfCampoYi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel26)
                                .addComponent(btnReiniciar)
                                .addComponent(btnCalcular))
                            .addGap(4, 4, 4))
                        .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbxOpcionesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbxOpcionesItemStateChanged
        this.fncSeleccionarFormaDeIteracion(this.cmbxOpciones.getSelectedIndex());
    }//GEN-LAST:event_cmbxOpcionesItemStateChanged

    private void btnReiniciarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReiniciarMouseReleased

        this.fncLimpiarCamposDeTexto(this.getContentPane());
        
        this.fncReiniciar();
    }//GEN-LAST:event_btnReiniciarMouseReleased

    private void btnCalcularMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCalcularMouseReleased
      
        this.fncReiniciar();
        
        
        this.fncObtenerValoresCampos(this.getContentPane());
        String msgRequisitos = "\n*** No se admiten campos vacíos.\n*** No se admiten ceros.\n*** Solo se admiten 9 dígitos.";

        
        if (this.fncValidarRestricciones(0, 5) == false) {
            JOptionPane.showMessageDialog(null, "Por favor, verifica los datos de las variables del formulario."
                    + msgRequisitos);

           
        } else if (this.fncValidarRestricciones(6, 7) == false) {
            JOptionPane.showMessageDialog(null, "Por favor, verifica los datos de las variables Xi y Yi."
                    + msgRequisitos);
            
        } else if (this.cmbxOpciones.getSelectedIndex() == 1
               && (this.pilaValoresCampos.elementAt(8).equals("") || Integer.parseInt((String) this.pilaValoresCampos.elementAt(8)) == 0)) {
            JOptionPane.showMessageDialog(null, "Por favor, verifica los datos de las variable porcentaje Ea(x) y Ea(y)."
                    + msgRequisitos);
          
        } else if (this.cmbxOpciones.getSelectedIndex() == 0
               && (this.pilaValoresCampos.elementAt(8).equals("") || Integer.parseInt((String) this.pilaValoresCampos.elementAt(8)) == 0
               || (Integer.parseInt((String) this.pilaValoresCampos.elementAt(8)) > 100))
        ) {
            JOptionPane.showMessageDialog(null, "Por favor, verifica los datos de la variable cantidad de iteraciones."
                    + "\n*** La cantidad máxima de iteraciones es de 100."
                    + msgRequisitos);
            
        }else {
            
            this.fncParseDoubleVariablesDeFormulario();
            this.fncParseIntegerVariablesIteradores();
            
            this.fncEstablecerVariablesEnSistemaDeOperaciones(true);
            
            if (this.cmbxOpciones.getSelectedIndex() == 0) this.fncCalculosPorIteracciones();
            if (this.cmbxOpciones.getSelectedIndex() == 1) this.fncCalculosPorEa();
            
        }
    }//GEN-LAST:event_btnCalcularMouseReleased
    
    private void fncReiniciar(){
           
        this.pilaValoresCampos.removeAllElements();
        
        this.fncEstablecerVariablesEnSistemaDeOperaciones(false);

        this.fncVaciarTabla();
    }

    private boolean fncValidarRestricciones(int x, int y) {
        boolean datos_correctos = true;

        for (int item = x; item <= y; item++) {
            if (this.pilaValoresCampos.elementAt(item).equals("") || Double.parseDouble((String) this.pilaValoresCampos.elementAt(item)) == 0) {
                datos_correctos = false;
            }
        }

        return datos_correctos;
    }

    private void fncLimpiarCamposDeTexto(Container container) {
        for (Component crearComponente : container.getComponents()) {
            if (crearComponente instanceof JTextField) {
                
                JTextField campo_de_texto = (JTextField) crearComponente;

                campo_de_texto.setText("");
            } else if (crearComponente instanceof Container) {
                
                fncLimpiarCamposDeTexto((Container) crearComponente);
            }
        }
    }

    private void fncObtenerValoresCampos(Container container) {
        for (Component crearComponente : container.getComponents()) {
            if (crearComponente instanceof JTextField) {
                
                JTextField campo_de_texto = (JTextField) crearComponente;
              
                if(campo_de_texto.getText().equals("-") || campo_de_texto.getText().equals("+") || campo_de_texto.getText().length() > 9) 
                    pilaValoresCampos.add("0");
                else{
                    pilaValoresCampos.add(campo_de_texto.getText());
                }

            } else if (crearComponente instanceof Container) {
                
                fncObtenerValoresCampos((Container) crearComponente);
            }
        }
    }

    private void fncAgregarEventoDeTecladoPanel(Container container) {
        for (Component crearComponente : container.getComponents()) {
            if (crearComponente instanceof JTextField) {
               
                JTextField campo_de_texto = (JTextField) crearComponente;

                campo_de_texto.addKeyListener(new KeyAdapter() {
                    @Override
                    public void keyTyped(KeyEvent evt) {
                        char charCap = evt.getKeyChar();
   
                        if ((charCap >= '0' && charCap <= '9')) {
                        } else {
                            evt.consume();
                        }

                    }
                });
            }
        }
    }

    private void fncAgregarEventoDeTecladoVentana(Container container) {
        for (Component crearComponente : container.getComponents()) {
            if (crearComponente instanceof JTextField) {

                JTextField campo_de_texto = (JTextField) crearComponente;

                campo_de_texto.addKeyListener(new KeyAdapter() {

                    @Override
                    public void keyTyped(KeyEvent evt) {
                        char charCap = evt.getKeyChar();

                        if ((charCap >= '0' && charCap <= '9')) {

                        } else if (charCap == '-' || charCap == '+') {

                            if (campo_de_texto.getText().contains("+") || campo_de_texto.getText().contains("-")) {
                                evt.consume();
                                JOptionPane.showMessageDialog(null, "Solo puede contener un símbolo de negativo o positivo al principio.");
                            } else {
                                campo_de_texto.setCaretPosition(0);
                            }

                        } else if (charCap == '.') {

                            if (campo_de_texto.getText().contains(".")) {
                                evt.consume();
                                JOptionPane.showMessageDialog(null, "Solo puede contener un símbolo de punto decimal.");
                            }

                        } else {
                            evt.consume();
                        }

                    }
                });
            }
        }
    }

    private void fncSeleccionarFormaDeIteracion(int seleccionar) {
        int x, y, base;
        x = this.cmbxOpciones.getX();
        y = this.cmbxOpciones.getY() + 50;
        base = this.cmbxOpciones.getWidth();
        
        if (seleccionar == 0) {
            fncLimpiarCamposDeTexto(this.panelOpcion2);
            this.remove(this.panelOpcion2);

            this.panelOpcion1.setVisible(true);
            this.panelOpcion1.setEnabled(true);
            this.panelOpcion1.setBounds(x, y, base, 185);
            this.add(this.panelOpcion1);
            this.validate();
            this.repaint();

        } else {
            fncLimpiarCamposDeTexto(this.panelOpcion1);
            this.remove(this.panelOpcion1);

            this.panelOpcion2.setVisible(true);
            this.panelOpcion2.setEnabled(true);
            this.panelOpcion2.setBounds(x, y, base, 182);
            this.add(this.panelOpcion2);
            this.validate();
            this.repaint();

        }
    }

    private void fncVaciarTabla() {
        int filas = this.modeloTabla.getRowCount();
        for (; filas > 0; filas--) {
            this.modeloTabla.removeRow(filas - 1);
        }
    }
    
    private void fncEstablecerVariablesEnSistemaDeOperaciones(boolean Establecer) {
        if(Establecer){
            this.operaciones = new SistemaDeOperaciones(
                (double) this.pilaValoresCampos.elementAt(2),
                (double) this.pilaValoresCampos.elementAt(3),
                (double) this.pilaValoresCampos.elementAt(5),
                (double) this.pilaValoresCampos.elementAt(0),
                (double) this.pilaValoresCampos.elementAt(1),
                (double) this.pilaValoresCampos.elementAt(4),
                (double) this.pilaValoresCampos.elementAt(6),
                (double) this.pilaValoresCampos.elementAt(7));
        }else{
            this.operaciones = new SistemaDeOperaciones();
        }
    }

    private void fncParseDoubleVariablesDeFormulario() {
        for (int item = 0; item <= 7; item++) {
            this.pilaValoresCampos.set(item, Double.parseDouble((String) pilaValoresCampos.elementAt(item)));
        }
    }

    private void fncParseIntegerVariablesIteradores() {
        this.pilaValoresCampos.set(8, Integer.parseInt((String) pilaValoresCampos.elementAt(8)));
        
    }

    private void fncCalculosPorIteracciones() {
        int limite = (int) this.pilaValoresCampos.elementAt(8);
        int NoDeIteracciones = 0;
        
        for (NoDeIteracciones = 0; NoDeIteracciones < limite; NoDeIteracciones++) {
            
            fncRegistrarDatos(NoDeIteracciones);

            if ( this.operaciones.fncVerificarRaices() || (this.operaciones.EaXr == 0 && this.operaciones.EaYr == 0) )
            { 
                JOptionPane.showMessageDialog(null, "El programa finalizo, las raíces son iguales a C y F respectivamente."
                + "\nProbablemente encontró las raíces en la iteracion " + (NoDeIteracciones + 1) + ".");

                break; 
            }
            
        }
        
        if ((NoDeIteracciones) == 100) {
            JOptionPane.showMessageDialog(null, "El programa finalizo, con cantidad máxima de "+ NoDeIteracciones +" iteraciones."
                    + "\nProbablemente el programa no encontró las raíces.");
        }else if ((NoDeIteracciones) == limite){
            JOptionPane.showMessageDialog(null, "El programa finalizo, con el límite de iteraciones establecido de "+ NoDeIteracciones +" iteraciones.");
        }
        
    }
    
    private void fncCalculosPorEa() {
        int NoDeIteracciones = 0, limite = 100;
        int porcentajeEa = (int) this.pilaValoresCampos.elementAt(8);
        
        for (NoDeIteracciones = 0; NoDeIteracciones < limite; NoDeIteracciones++) {
            
            fncRegistrarDatos(NoDeIteracciones);

            if( this.operaciones.fncVerificarRaices() || (this.operaciones.EaXr == 0 && this.operaciones.EaYr == 0) ){
                JOptionPane.showMessageDialog(null, "El programa finalizo, las raíces son iguales a C y F respectivamente."
                + "\nProbablemente encontró las raíces en la iteracion " + (NoDeIteracciones + 1)+ ".");
                
                break;

            }else if( (this.operaciones.EaXr > porcentajeEa && this.operaciones.EaYr > porcentajeEa) ){
                JOptionPane.showMessageDialog(null, "El programa finalizo, llego al límite del porcentaje establecidos en Ea(xr) y Ea(yr)."
                + "\ncon un resultado de " + (NoDeIteracciones + 1) + " iteraciones."
                + "\nProbablemente el programa no encontró las raíces.");

                break;
            
            }
            
        }
        
        if ((NoDeIteracciones) == 100) {
            JOptionPane.showMessageDialog(null, "El programa finalizo, con cantidad máxima de "+ NoDeIteracciones +" iteraciones."
                    + "\nProbablemente el programa no encontró las raíces.");
        }
        
    }
        
    private void fncRegistrarDatos(int item) {
        
        this.modeloTabla.setNumRows(modeloTabla.getRowCount() + 1);

        modeloTabla.setValueAt((item + 1), item, 0);

        modeloTabla.setValueAt(this.operaciones.Xi, item, 1);

        modeloTabla.setValueAt(this.operaciones.Yi, item, 2);

        double valorXr = this.operaciones.fncCalcularXr();
        modeloTabla.setValueAt(valorXr, item, 3);

        double valorYr = this.operaciones.fncCalcularYr();
        modeloTabla.setValueAt(valorYr, item, 4);

        if (item > 0) {
            
            double valorEaXr = this.operaciones.fncCalcularEa(valorXr, (double) modeloTabla.getValueAt(item - 1, 3));
            modeloTabla.setValueAt(valorEaXr + "%", item, 5);

            double valorEaYr = this.operaciones.fncCalcularEa(valorYr, (double) modeloTabla.getValueAt(item - 1, 4));
            modeloTabla.setValueAt(valorEaYr + "%", item, 6);
            
            this.operaciones.EaXr = valorEaXr;
            this.operaciones.EaYr = valorEaYr;
        }

        this.operaciones.Xi = valorXr;
        this.operaciones.Yi = valorYr;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnReiniciar;
    private javax.swing.JComboBox<String> cmbxOpciones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelImagen;
    private javax.swing.JPanel panelOpcion1;
    private javax.swing.JPanel panelOpcion2;
    private javax.swing.JTable tblMiTabla;
    private javax.swing.JTextField txtfCampoA;
    private javax.swing.JTextField txtfCampoB;
    private javax.swing.JTextField txtfCampoC;
    private javax.swing.JTextField txtfCampoD;
    private javax.swing.JTextField txtfCampoE;
    private javax.swing.JTextField txtfCampoF;
    private javax.swing.JTextField txtfCampoIteraciones;
    private javax.swing.JTextField txtfCampoPorcentaje;
    private javax.swing.JTextField txtfCampoXi;
    private javax.swing.JTextField txtfCampoYi;
    // End of variables declaration//GEN-END:variables
    
    private DefaultTableModel modeloTabla = new DefaultTableModel();

    Stack pilaValoresCampos = new Stack();
    
    private SistemaDeOperaciones operaciones;
}
